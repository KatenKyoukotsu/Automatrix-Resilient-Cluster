- name: Аутентификация нод и установка кластера # Аутентификация нод и установка кластера
  hosts: lb1
  tasks:
    - name: Аутентификация pcs на нодах # Аутентификация узлов lb1 и lb2 с помощью пользователя hacluster и пароля 123
      ansible.builtin.shell: |
        pcs host auth lb1 lb2 -u hacluster -p 123

    - name: Конфигурация кластера с именем cluster_lb # Настройка кластера с именем cluster_lb, включающего узлы lb1 и lb2
      ansible.builtin.shell: |
        pcs cluster setup cluster_lb lb1 lb2 --force

- name: Аутентификация кластера и запуск кластера # Аутентификация кластера и запуск кластера
  hosts: lb1
  tasks:
    - name: Старт кластера с помощью pcs # Запуск кластера на всех узлах
      ansible.builtin.shell: |
        pcs cluster start --all

    - name: Выключить STONITH (на продакшене рекомендуется включить) # Отключение STONITH (Shoot The Other Node In The Head)
      ansible.builtin.shell: |
        pcs property set stonith-enabled=false

    - name: Добавить ресурс виртуального ip адреса # Создание ресурса виртуального IP адреса
      ansible.builtin.shell: |
        pcs resource create vip IPaddr2 ip=10.0.0.100 cidr_netmask=24 nic=eth0 clusterip_hash="sourceip-sourceport" op monitor interval=30s

    - name: Включить ресурс виртуального ip адреса # Включение ресурса виртуального IP адреса
      ansible.builtin.shell: |
        pcs resource enable vip

    - name: Добавить ресурс nginx # Создание ресурса nginx с мониторингом каждые 30 секунд
      ansible.builtin.shell: |
        pcs resource create nginx systemd:nginx op monitor interval=30s

    - name: Включить ресурс nginx # Включение ресурса nginx
      ansible.builtin.shell: |
        pcs resource enable nginx

    - name: Клонировать nginx на все ноды # Клонирование ресурса nginx на все узлы
      ansible.builtin.shell: |
        pcs resource clone nginx

    - name: Сконфигурировать ресурс vip так, чтобы он был доступен только на ноде с nginx # Добавление ограничения для совместного размещения ресурса vip с клонированным ресурсом nginx
      ansible.builtin.shell: |
        pcs constraint colocation add vip with nginx-clone

    - name: Сконфигурировать порядок запуска ресурсов # Настройка порядка запуска ресурсов: сначала nginx-clone, затем vip
      ansible.builtin.shell: |
        pcs constraint order start nginx-clone then start vip
